# Snakemake workflow for performing several population genomic comparisons of population replicates across two different
# habitat categories and two different time periods. These units however can be changed to any categorical variable with
# two different types.

report: "report/workflow.rst"

include: "rules/common.smk"

include: "rules/ref.smk"
include: "rules/preprocessing.smk"
include: "rules/qc.smk"
include: "rules/mapping.smk"
include: "rules/angsd.smk"
include: "rules/thetas.smk"
include: "rules/linkage.smk"
include: "rules/pca.smk"
include: "rules/admixture.smk"
include: "rules/inbreeding.smk"
include: "rules/plink.smk"
include: "rules/gone.smk"

# Accumulate desired output files from config file

wildcard_constraints:
	dataset=config["dataset"],
	population="|".join(samples.index.tolist() + [config["dataset"]] + samples.population.values.tolist())

all_outputs = []

if config["analyses"]["pca_pcangsd"]:
	all_outputs.append(expand(results + "/pcangsd/{population}.cov",
		population=config["dataset"]))

if config["analyses"]["admix_ngsadmix"]:
	all_outputs.append(
		expand(
			results+"/ngsadmix/{population}_K{kvalue}.qopt",
			population=config["dataset"],
			kvalue=config["params"]["ngsadmix"]["kvalues"]
			)
		)

if config["analyses"]["thetas_angsd"]:
	intersect = []
	if config["analyses"]["thetas_angsd"]["all_sites"]:
		intersect.append("")
	if config["analyses"]["thetas_angsd"]["intersect_sites"]:
		intersect.append(".intersect")
	all_outputs.append(expand(
		results+"/angsd/thetas/{population}{intersect}.thetaWindows.pestPG",
		population=pop_list, intersect=intersect))

if config["analyses"]["heterozygosity_angsd"]:
	intersect = []
	if config["analyses"]["heterozygosity_angsd"]["all_sites"]:
		intersect.append("")
	if config["analyses"]["heterozygosity_angsd"]["intersect_sites"]:
		intersect.append(".intersect")
	all_outputs.append(expand(
		results+"/angsd/thetas/{population}{intersect}.thetaWindows.pestPG",
		population=samples.index, intersect=intersect))

if config["analyses"]["inbreedingCoeff_ngsf-hmm"]:
	all_outputs.append(expand(
		results+"/inbreeding/{population}.indF", population=pop_list))

if config["analyses"]["ROH_ngsf-hmm"]:
	all_outputs.append(expand(
		results+"/inbreeding/{population}.ibd", population=pop_list))
	all_outputs.append(expand(
		results+"/inbreeding/{population}.roh", population=pop_list))

if config["analyses"]["pastNe_gone"]:
	all_outputs.append(expand(
		results+"/GONE/OUTPUT_{population}_cMMb{rr}_hc{hc}",
		population=pop_list,
		rr=[1,3,5,6,7,9,10],
		hc=[0.01,0.05,0.1,0.5]
	))

# master target rule
rule all:
    input: all_outputs